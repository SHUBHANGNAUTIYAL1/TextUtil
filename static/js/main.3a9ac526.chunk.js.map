{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","react_default","a","createElement","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","props","concat","Mode","react_router_dom","to","title","aria-label","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","text1","setText1","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","setAlert","message","setTimeout","body","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3a9ac526.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"container\">\r\n        <h1>About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n  <div className=\"container-fluid\">\r\n  \r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        \r\n       \r\n      </ul>\r\n\r\n     {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>*/}\r\n      <div className={`form-check form-switch text-${props.Mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\"onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes ={title: PropTypes.string}","import React , { useState }  from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  \r\n  const handleUpclick=()=>{\r\n    console.log(\"uppercase was clicked\");\r\n    let newText=text.toUpperCase();\r\n    \r\n    setText(newText); \r\n    setText1(newText);\r\n    props.showAlert(\"Converted to uppercase\",\"success\");\r\n   \r\n    \r\n  }\r\n  const handledownclick=()=>{\r\n    // converting lowercase\r\n    let  newText=text.toLowerCase();\r\n    \r\n    setText(newText); \r\n    setText1(newText);\r\n    props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    \r\n  }\r\n  \r\n  const clear1=()=>{\r\n    \r\n    setText(\"\"); \r\n    props.showAlert(\"Text has been cleared\",\"success\");\r\n\r\n  }\r\n  const undo=()=>{\r\n   \r\n   \r\n    \r\n    setText(text1); \r\n    props.showAlert(\"Undo operation performed\",\"success\");\r\n  }\r\n  const handleCopy = () => {\r\n    var text=document.getElementById(\"myBox\");\r\n     text.select();\r\n    \r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copy function has been performed\",\"success\");\r\n  }\r\n\r\n  const handleExtraSpace=()=>{\r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra space has been removed\",\"success\");\r\n  }\r\n  const handleonchange=(event)=>{\r\n    console.log(\"uppercase was clicked\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const [text,setText]= useState('');\r\n  const [text1,setText1]=useState('');\r\n  \r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.Mode==='light'?'white':'Black'}}>\r\n  <h1>{props.heading}</h1>    \r\n<div className=\"mb-3\">\r\n \r\n  <textarea className=\"form-control\" value={text} onChange={handleonchange} style={{backgroundColor: props.Mode==='light'?'#13466e':'white' ,  color: props.Mode==='light'?'white':'Black'}}  id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpclick} >convert uppercase</button>\r\n\r\n<button  disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handledownclick}>convert lowercase</button>\r\n<button  disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={clear1}>clear</button> \r\n<button  disabled={text.length===0}  className=\"btn btn-primary mx-2 my-1\" onClick={undo}>undo</button>\r\n<button disabled={text.length===0}  className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>copy</button>\r\n<button disabled={text.length===0}  className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpace}>remove Extra Space</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.Mode==='light'?'white':'Black'}}>\r\n      <h1>Your Text Summary</h1>\r\n      <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length-text.split(\" \").length+1} characters</p>\r\n    \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>\r\n    {\r\n      const lower=word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase()+lower.slice(1);  \r\n    }\r\n  return (\r\nprops.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n  )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React,{ useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\nfunction App() {\n  const [Mode,setMode]= useState('dark');\n  const[alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>\n  {\n     setAlert({\n      msg:message,\n      type:type\n     })\n     setTimeout(()=>\n      {\n        setAlert(null)\n      },1500);\n  }\n\n  const toggleMode=()=>\n  {\n    if(Mode ==='light')\n    {\n    setMode('dark');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light mode has been enabled \",\"success\");\n    }\n    else\n    {\n    setMode('light');\n    document.body.style.backgroundColor='black';\n    showAlert(\"Dark mode has been enabled \",\"success\");\n    }\n}\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtil\" Mode={Mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n         \n          <Route path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" Mode={Mode}/>\n          </Route>\n    </Switch>\n    \n    \n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}